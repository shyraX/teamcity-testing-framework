name: TeamCity Tests

on: push

jobs:
  checkstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Grant execute permission to mvnw
        run: chmod +x ./mvnw

      - name: Validate Checkstyle
        run: ./mvnw validate

  run_teamcity_tests:
    needs: checkstyle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Grant execute permission to mvnw
        run: chmod +x ./mvnw

      - name: Install ifconfig
        run: sudo apt-get update && sudo apt-get install -y net-tools

      - name: Set up host environment variable
        run: |
          echo "HOST=$(ifconfig | grep -E "([0-9]{1,3}\.){3}[0-9]{1,3}" | grep -v 127.0.0.1 | awk '{ print $2 }' | cut -f2 -d: | head -n1)" >> $GITHUB_ENV

      - name: Set up host config property
        run: echo "host=$HOST:8111" > src/main/resources/config.properties

      - name: Pull Selenoid Chrome
        run: docker pull selenoid/vnc:chrome_91.0

      - name: Setup config browsers
        run: echo -e "browser=chrome\nremote=http://$HOST:4444/wd/hub" >> src/main/resources/config.properties

      - name: Run Selenoid
        run: |
          docker run -d --name selenoid \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v $(pwd)/infra/:/etc/selenoid/:ro \
          -p 4444:4444 \
          aerokube/selenoid

      - name: Run Selenoid UI
        run: |
          docker run -d --name selenoid-ui \
          -p 8080:8080 \
          aerokube/selenoid-ui \
          --selenoid-uri http://$HOST:4444

      - name: Run TeamCity server
        run: |
          docker run -u 0 -d --name teamcity-server \
          -v $(pwd)/tmp/teamcity_server/datadir:/data/teamcity_server/datadir \
          -v $(pwd)/tmp/teamcity_server/logs:/opt/teamcity/logs \
          -p 8111:8111 \
          jetbrains/teamcity-server:2023.11.1

      - name: Set up TeamCity server
        run: ./mvnw clean test -Dtest=TeamcitySetupTest#startUpTest

      - name: Set up superUserToken environment variable
        run: echo "SUPER_USER_TOKEN=$(docker logs teamcity-server | grep 'Super user authentication token' | tail -n 1 | awk '{print $6}')" >> $GITHUB_ENV

      - name: Set up superUserToken to config.properties
        run: echo "superUserToken=$SUPER_USER_TOKEN" >> src/main/resources/config.properties

      - name: Run TeamCity agent
        run: |
          docker run -e SERVER_URL=http://$HOST:8111 -u 0 -d --name teamcity-agent \
          -v $(pwd)/tmp/teamcity_agent/conf:/data/teamcity_agent/conf \
          jetbrains/teamcity-agent:2023.11.1

      - name: Set up TeamCity agent
        run: ./mvnw test -Dtest=AgentSetupTest#setupAgentTest

      - name: Run API tests
        run: ./mvnw test -DsuiteXmlFile=testng-suites/api-suite.xml
        timeout-minutes: 30

      - name: Run UI tests
        run: ./mvnw test -DsuiteXmlFile=testng-suites/ui-suite.xml
        timeout-minutes: 30

      - name: Load test report history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
            ref: gh-pages
            path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: target/allure-results

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Grant execute permission to swagger-coverage-commandline
        run: chmod +x ./swagger-coverage-commandline-1.5.0/bin/swagger-coverage-commandline

      - name: Run Swagger coverage
        if: always()
        run: ./swagger-coverage-commandline-1.5.0/bin/swagger-coverage-commandline -s http://$HOST:8111/app/rest/swagger.json -i target/swagger-coverage-output

      - name: Save Swagger coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: swagger-coverage
          path: |
            swagger-coverage-report.html
            swagger-coverage-results.json